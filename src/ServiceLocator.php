<?php

namespace eazy\http;

use eazy\base\BaseObject;
use eazy\Eazy;
use eazy\http\base\BaseComponent;
use eazy\http\di\Container;
use eazy\http\exceptions\InvalidConfigException;
use Symfony\Component\DependencyInjection\ContainerBuilder;

/**
 * @property \eazy\http\Request $request
 * @property \eazy\http\Response $response
 * @property \eazy\http\components\View $view
 * @property \eazy\http\Controller $controller
 * @property \eazy\http\components\ErrorHandler $errorHandler
 * @property \eazy\http\Router $router
 * @property \eazy\http\databases\DbConnection $db
 * @property \eazy\http\Event $event
 */
class ServiceLocator extends BaseComponent
{

    /**
     * @var ContainerBuilder
     */
    private static $container;

    public function init()
    {
        if (!self::$container) {
            self::$container = new ContainerBuilder();
        }
        parent::init(); // TODO: Change the autogenerated stub
    }

    public function has(string $id)
    {
        return self::$container->has($id);
    }

    public function get(string $id)
    {
        return self::$container->get($id);
    }

    public function set($id, $service)
    {
        return self::$container->set($id, $service);
    }

    public function __get(string $name)
    {

        if (self::$container->has($name)) {
            return self::$container->get($name);
        }

        return parent::__get($name);
    }
}